import{XtallatX,disabled}from"./node_modules/xtal-latx/xtal-latx.js";import{define}from"./node_modules/xtal-latx/define.js";import{debounce}from"./node_modules/xtal-latx/debounce.js";import{NavDown}from"./node_modules/xtal-latx/NavDown.js";const if$="if",lhs="lhs",rhs="rhs",tag="tag",equals="equals",not_equals="not_equals",m$="m";export class IfDiff extends XtallatX(HTMLElement){constructor(){super(...arguments);this._conn=!1;this._navDown=null}static get is(){return"if-diff"}static get observedAttributes(){return[if$,lhs,rhs,tag,equals,not_equals,disabled,m$]}get if(){return this._if}set if(nv){this.attr(if$,!!nv,"")}get lhs(){return this._lhs}set lhs(nv){this.attr(lhs,nv.toString())}get rhs(){return this._rhs}set rhs(nv){this.attr(rhs,nv.toString())}get equals(){return this._equals}set equals(nv){this.attr(equals,nv,"")}get not_equals(){return this._not_equals}set not_equals(nv){this.attr(not_equals,nv,"")}get tag(){return this._tag}set tag(nv){this.attr(tag,nv)}get m(){return this._m}set m(v){this.attr(m$,v.toString())}attributeChangedCallback(n,ov,nv){super.attributeChangedCallback(n,ov,nv);const u="_"+n;switch(n){case equals:case not_equals:case if$:this[u]=null!==nv;break;case tag:case lhs:case rhs:case m$:this[u]=nv;break;}this.onPropsChange()}init(){this.passDown()}connectedCallback(){this.style.display="none";this._upgradeProperties(IfDiff.observedAttributes);this._conn=!0;this._debouncer=debounce((getNew=!1)=>{this.passDown()},16);setTimeout(()=>{this.init()},50)}onPropsChange(){if(!this._conn||this._disabled)return;this._debouncer()}loadTemplate(el){const tmpl=el.querySelector("template");if(!tmpl){setTimeout(()=>{this.loadTemplate(el)},50);return}el.appendChild(tmpl.content.cloneNode(!0));tmpl.remove()}tagMatches(nd){const matches=nd.matches,val=this.value,t=this._tag;matches.forEach(el=>{const ds=el.dataset;if("0"===ds[t]){if(val){this.loadTemplate(el);el.dataset[t]="1"}}else{el.dataset[t]=val?"1":"-1"}})}passDown(){let val=this._if;if(val&&(this._equals||this._not_equals)){if(this._equals){val=this._lhs===this._rhs}else{val=this._lhs!==this._rhs}}this.value=val;this.de("value",{value:val});if(this._tag){if(null===this._navDown){const tag=this._tag,max=this._m?this._m:1/0,bndTagMatches=this.tagMatches.bind(this);this._navDown=new NavDown(this,el=>el.dataset&&!!el.dataset[this._tag],nd=>bndTagMatches(nd),max);this._navDown.init()}else{this.tagMatches(this._navDown)}}}disconnect(){if(this._navDown)this._navDown.disconnect()}}define(IfDiff);